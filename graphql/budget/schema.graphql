extend type Query {
  budgets(dateStart: Date!, count: Int = 5): BudgetPlan
}
extend type Mutation {
  upsertBudget(input: UpsertBudgetInput!): UpsertBudgetPayload
}

type BudgetPlan {
  periods: [Date]
  accounts: [Account]
  budget: [Budget]
}

type Budget {
  date: Date!
  allocations: [Allocation]
}

type Allocation {
  account: Account!
  amount: Float
  balance: Float
}

input UpsertBudgetInput {
  account: String!
  date: Date!
  amount: Float!
}

type UpsertBudgetPayload {
  success: Boolean
}
